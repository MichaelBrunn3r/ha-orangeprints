blueprint:
  name: Cycle Scenes
  description: ''
  domain: script
  author: 'Michael Brunner'
  # source_url: ""
  input:
    scenes:
      name: Scenes
      selector:
        entity:
          multiple: true
          filter:
            - domain: scene
    helper_index:
      name: Index Helper
      description: 'Counter helper to keep track of the positions in the cycle'
      selector:
        entity:
          domain:
            - counter
          multiple: false
    # Hidden Inputs:
    #   - restart: If true, restart cycle

mode: restart

sequence:
  - variables:
      scenes: !input scenes
      num_scenes: '{{ scenes | length }}'
      index: !input helper_index
  - if:
      - condition: template
        value_template: '{{ restart }}'
    then:
      - service: counter.reset
        target:
          entity_id: '{{ index }}'
  - service: scene.turn_on
    target:
      entity_id: '{{ scenes[(states(index) | int) % num_scenes] }}'
  - service: counter.set_value
    data:
      value: '{{ ((states(index) | int) + 1) % num_scenes  }}'
    target:
      entity_id: !input helper_index
